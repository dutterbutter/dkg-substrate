initSidebarItems({"enum":[["Call","Contains one variant per dispatchable that can be called by an extrinsic."],["Error","Custom dispatch errors of this pallet."],["Event","The event emitted by this pallet."]],"struct":[["GenesisConfig","Can be used to configure the genesis state of this pallet."],["Pallet","The pallet implementing the on-chain logic."],["_GeneratedPrefixForStorageAuthorityReputations",""],["_GeneratedPrefixForStorageDKGPublicKey",""],["_GeneratedPrefixForStorageDKGPublicKeySignature",""],["_GeneratedPrefixForStorageHistoricalRounds",""],["_GeneratedPrefixForStorageMisbehaviourReports",""],["_GeneratedPrefixForStorageNextDKGPublicKey",""],["_GeneratedPrefixForStorageNextPublicKeySignature",""],["_GeneratedPrefixForStoragePreviousPublicKey",""],["_GeneratedPrefixForStorageRefreshDelay",""],["_GeneratedPrefixForStorageRefreshInProgress",""],["_GeneratedPrefixForStorageRefreshNonce",""],["_GeneratedPrefixForStorageShouldManualRefresh",""],["_GeneratedPrefixForStorageTimeToRestart",""],["_GeneratedPrefixForStorageUsedSignatures",""]],"trait":[["Config","Configuration trait of this pallet."]],"type":[["AuthorityReputations","Tracks authority reputations"],["DKGPublicKey","Holds active public key for ongoing session"],["DKGPublicKeySignature","Signature of the current DKG public key"],["HistoricalRounds","Tracks current proposer set"],["MisbehaviourReports","Tracks misbehaviour reports"],["Module","Type alias to `Pallet`, to be used by `construct_runtime`."],["NextDKGPublicKey","Holds public key for next session"],["NextPublicKeySignature","Signature of the DKG public key for the next session"],["PreviousPublicKey","Holds public key for immediate past session"],["RefreshDelay","Session progress required to kickstart refresh process"],["RefreshInProgress","Check if there is a refresh in progress."],["RefreshNonce","Nonce value for next refresh proposal"],["ShouldManualRefresh","Should we manually trigger a DKG refresh process."],["TimeToRestart","Number of blocks that should elapse after which the dkg keygen is restarted if it has stalled"],["UsedSignatures","Public key Signatures for past sessions"]]});