initSidebarItems({"constant":[["DKG_ENGINE_ID",""],["GENESIS_AUTHORITY_SET_ID","Authority set id starts with zero at genesis"],["GENESIS_BLOCK_NUMBER",""],["KEY_TYPE",""],["UNTRACK_INTERVAL",""]],"enum":[["BloomInput",""],["ConsensusLog",""],["DKGReport",""],["FromDecStrErr","Conversion from decimal string error"],["FromStrRadixErrKind","A list of error categories encountered when parsing numbers."],["TransactionAction",""],["TransactionV1",""],["TransactionV2",""]],"fn":[["keccak_256","Utility fn to calculate keccak 256 has"]],"mod":[["crypto",""],["handlers",""],["offchain",""],["proposal",""],["traits",""],["util","Utility functions for Ethereum."],["utils",""]],"struct":[["AccessListItem",""],["Account",""],["AggregatedMisbehaviourReports",""],["AggregatedPublicKeys",""],["AuthoritySet",""],["Block",""],["Bloom","Bloom hash type with 256 bytes (2048 bits) size."],["BloomRef",""],["Commitment",""],["EIP1559Transaction",""],["EIP1559TransactionMessage",""],["EIP2930Transaction",""],["EIP2930TransactionMessage",""],["FromStrRadixErr","The error type for parsing numbers from strings."],["H128",""],["H160","Fixed-size uninterpreted hash type with 20 bytes (160 bits) size."],["H256","Fixed-size uninterpreted hash type with 32 bytes (256 bits) size."],["H264",""],["H32",""],["H512","Fixed-size uninterpreted hash type with 64 bytes (512 bits) size."],["H520",""],["H64",""],["Header","Ethereum header definition."],["LegacyTransaction",""],["LegacyTransactionMessage",""],["Log",""],["OffchainSignedProposals",""],["PartialHeader","Partial header definition without ommers hash and transactions root."],["Receipt",""],["TransactionRecoveryId",""],["TransactionSignature",""],["U128","Little-endian large integer type"],["U256","Little-endian large integer type"],["U512","Little-endian large integer type"],["U64","Little-endian large integer type"],["UnsignedProposal",""]],"trait":[["BigEndianHash",""],["DKGApi",""]],"type":[["AccessList",""],["Address",""],["AuthorityIndex",""],["AuthoritySetId",""],["BlockV0",""],["BlockV1",""],["BlockV2",""],["MmrRootHash","The type used to represent an MMR root hash."],["Public",""],["PublicKeyAndSignature",""],["Secret",""],["Signature",""],["TransactionV0",""]]});