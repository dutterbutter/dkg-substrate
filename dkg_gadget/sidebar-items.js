initSidebarItems({"constant":[["DKG_PROTOCOL_NAME",""]],"fn":[["dkg_peers_set_config","Returns the configuration value to put in [`sc_network::config::NetworkConfiguration::extra_sets`]."],["start_dkg_gadget","Start the DKG gadget."]],"macro":[["metric_inc",""],["metric_set",""]],"mod":[["messages",""],["storage",""]],"struct":[["DKGKeystore","A DKG specific keystore implemented as a `Newtype`. This is basically a wrapper around [`sp_keystore::SyncCryptoStore`] and allows to customize common cryptographic functionality."],["DKGParams","DKG gadget initialization parameters."]],"trait":[["Client","A convenience DKG client trait that defines all the type bounds a DKG client has to satisfy. Ideally that should actually be a trait alias. Unfortunately as of today, Rust does not allow a type alias to be used as a trait bound. Tracking issue is https://github.com/rust-lang/rust/issues/41517."]]});