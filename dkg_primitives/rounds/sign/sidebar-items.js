initSidebarItems({"enum":[["Error",""],["Error","Error type of keygen protocol"],["InternalError",""],["ProceedError",""],["ProceedError","Proceeding protocol error"],["SignError",""],["SignState","Wrapper state-machine for Sign rounds"]],"fn":[["convert_signature",""],["generate_h1_h2_N_tilde",""],["verify",""]],"mod":[["gg20_keygen","High-level keygen protocol implementation"],["gg20_sign","High-level threshold signing protocol implementation"],["gg_2020",""],["rounds",""]],"struct":[["CompletedOfflineStage",""],["KeyGenBroadcastMessage1",""],["KeyGenDecommitMessage1",""],["Keygen","Keygen protocol state machine"],["Keys",""],["LocalKey","Local secret obtained by party after keygen protocol is completed"],["LocalSignature",""],["OfflineProtocolMessage",""],["OfflineStage","Offline Stage of GG20 signing"],["Parameters",""],["PartialSignature",""],["PartyPrivate",""],["PreSignRounds","Pre-sign rounds Used to collect incoming messages from other peers which started earlier"],["ProtocolMessage","Protocol message which parties send on wire"],["SharedKeys",""],["SignBroadcastPhase1",""],["SignDecommitPhase1",""],["SignKeys",""],["SignManual","Manual GG20 signing"],["SignRounds","Sign rounds Main state, corresponds to gg20 SignManual one round signing object"],["SignatureRecid",""]],"trait":[["RoundBlame",""]]});