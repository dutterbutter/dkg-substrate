name: CI

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master

jobs:
  test-code:
    name: ${{ matrix.make.name }} (${{ matrix.os }})
    # Set up matrix for future os test checks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
      # Only running tests and checks for ubuntu right now
        os: [ubuntu-latest]
        # Only using nightly toolchain
        rust: [nightly]
        # Setup to execute cargo check, fmt, and make use of nextest run for unit tests
        make:
          - name: Check code
            task: "check"
          - name: Check Format
            task: "fmt --all -- --check"
          - name: Test Code
            task: "nextest run"
        include:
        # Add another key that has sccache-path for ubuntu
          - os: ubuntu-latest
            sccache-path: /home/runner/.cache/sccache

    env:
      # Show stack trace when tests panic
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    # Install sccache for improved build and test speed
    # sccache reduces the number of times we need to re-build crates when possible
    # Note: This only install for ubuntu, if intended to use with macos need include conditional check and then proceed to install using Homebrew
    - name: Install sccache (ubuntu-latest)
      run: |
          SCCACHE_FILE=sccache-v0.2.15-aarch64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-aarch64-unknown-linux-musl.tar.gz" -o $SCCACHE_FILE
          mv -f $SCCACHE_FILE $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          sudo chmod +x $HOME/.local/bin/sccache

    - name: Install cargo-nextest
      uses: baptiste0928/cargo-install@v1
      with:
        crate: cargo-nextest
        version: 0.9

    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
    # Preserve directories between job runs
    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
            ${{ runner.os }}-cargo-

    - name: Save sccache
      uses: actions/cache@v2
      continue-on-error: false
      with:
        path: ${{ matrix.sccache-path }}
        key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-sccache-
    # start the sccache server
    - name: Start sccache server
      run: sccache --start-server
    # Runs actual checks, fmt, and tests  
    - name: ${{ matrix.make.name }}
      run: cargo ${{ matrix.make.task }}
    - name: Print sccache stats
      run: sccache --show-stats
    - name: Stop sccache server
      run: sccache --stop-server || true